// HOMEWORK 2
// PROBLEM 2
// James Hicks

#include <stdool.h>
#include <stdint.h>
#include <inc/hw_memmap.h>
#include <inc/hw_ints.h>
#include <driverlib/gpio.h>
#include <driverlib/sysctl.h>
#include <driverlib/timer.h>
#include <driverlib/interrupt.h>

// 1) disable timer interrupts
// 2) clear timer interrupt flag
// 3) handle state transitions
// 4) enable gpio interrupts
void timer1_interrupt_handler(void)
{
   
}

// 1) disable portf interrupts
// 2) clear portf interrupt flag
// 3) enable timer interrupts
// 3) start the timer
void portf_interrupt_handler(void)
{
   
}

void gpio_init(void)
{
   // ENABLE CLOCK TO PORTF
   SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOF);
   while(!SysCtlPeripheralReady(SYSCTL_PERIPH_GPIOF))
   {
   }

   // SET DIRECTIONS
   GPIOPinTypeGPIOOutput(GPIO_PORTF_BASE,
                         GPIO_PIN_1 | GPIO_PIN_2 |
                         GPIO_PIN_3);

   // UNLOCK PF0
   GPIOUnlockPin(GPIO_PORTF_BASE,
                 GPIO);
}

void timer1_init(void)
{

}


int main(void)
{

   gpio_init(void);
   timer1_init(void);

   while(1)
   {
   }

   return 0;

}
